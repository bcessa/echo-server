---
kind: pipeline
type: kubernetes
name: Continuous Integration

image_pull_secrets:
  - bryk-io-registry

steps:
  - name: Setup environment
    image: registry.bryk.io/general/golang:1.14
    pull: if-not-exists
    environment:
      DEPLOYMENT_KEY:
        from_secret: deployment-key
    commands:
      - echo "$DEPLOYMENT_KEY" | base64 -d > /drone/src/key
      - chmod 400 /drone/src/key
  - name: Verify style and consistency
    image: registry.bryk.io/general/golang:1.14
    pull: if-not-exists
    commands:
      - make lint
  - name: Run unit tests
    image: registry.bryk.io/general/golang:1.14
    pull: if-not-exists
    commands:
      - make test
  - name: Build project artifacts
    image: registry.bryk.io/general/golang:1.14
    pull: if-not-exists
    commands:
      - make build-for os=linux arch=amd64
    when:
      ref:
        - refs/tags/v*
  - name: Publish new image version
    image: plugins/docker
    settings:
      registry: registry.bryk.io
      repo: registry.bryk.io/general/echo-server
      tags: ${DRONE_TAG##v}
      username:
        from_secret: registry-user
      password:
        from_secret: registry-password
      build_args:
        - VERSION=${DRONE_TAG##v}
    when:
      ref:
        - refs/tags/v*
  - name: Report errors
    image: alpine
    commands:
      - echo "report failure"
    when:
      status:
        - failure

trigger:
  event:
    - push
    - tag

---
kind: pipeline
type: kubernetes
name: Continuous Delivery

image_pull_secrets:
  - bryk-io-registry

steps:
  - name: Run deployment
    image: registry.bryk.io/general/drone-helm:0.1.0
    environment:
      KUBECONFIG:
        from_secret: kubeconfig
      CHART_VALUES:
        from_secret: chart-values
  - name: Report errors
    image: alpine
    commands:
      - echo "report failure"
    when:
      status:
        - failure

trigger:
  event:
    - promote
    - rollback
